(()=>{var a=(t,r,o)=>new Promise((e,g)=>{var l=n=>{try{s(o.next(n))}catch(i){g(i)}},m=n=>{try{s(o.throw(n))}catch(i){g(i)}},s=n=>n.done?e(n.value):Promise.resolve(n.value).then(l,m);s((o=o.apply(t,r)).next())});var d={rootMargin:"0px",threshold:0},c=new IntersectionObserver(t=>{t.forEach(r=>a(void 0,null,function*(){let o=r.target,e=o.getAttribute("data-original");e&&r.isIntersecting&&(yield u(e,o),o.classList.toggle("img-loading"),c.unobserve(o))}))},d);function u(t,r){return a(this,null,function*(){return new Promise((o,e)=>{r.onload=()=>o(r),r.onerror=e,r.src=t})})}var b=document.querySelectorAll(".img-loading");Array.from(b).forEach(t=>{c.observe(t)});})();
